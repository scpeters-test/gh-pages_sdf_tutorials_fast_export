{"links": {"self": {"href": "data/repositories/osrf/sdf_tutorials/pullrequests/34/comments/114683550.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdf_tutorials/diff/osrf/sdf_tutorials:ba131eee209e..50070463105e?path=pose_frame_semantics%2Fproposal.md"}, "html": {"href": "#!/osrf/sdf_tutorials/pull-requests/34/_/diff#comment-114683550"}}, "parent": {"id": 114636516, "links": {"self": {"href": "data/repositories/osrf/sdf_tutorials/pullrequests/34/comments/114636516.json"}, "html": {"href": "#!/osrf/sdf_tutorials/pull-requests/34/_/diff#comment-114636516"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 34, "links": {"self": {"href": "data/repositories/osrf/sdf_tutorials/pullrequests/34.json"}, "html": {"href": "#!/osrf/sdf_tutorials/pull-requests/34"}}, "title": "Proposal: scoping rules, allow everything to use //pose[@relative_to]"}, "content": {"raw": "what about the following:\n\n~~~\n<world name=\"W\">\n  <frame name=\"F\"/>\n  <model name=\"M\">\n    <frame name=\"F\"/>\n    <link name=\"L\">\n      <collision name=\"C\">\n        <pose relative_to=\"F\"/>\n      </collision>\n    </link>\n  </model>\n</world>\n~~~\n\nthere are frames named `F` at the model scope and world scope. do we really want to let objects inside a model reach outside the model scope even if they are in the same file?", "markup": "markdown", "html": "<p>what about the following:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nt\">&lt;world</span> <span class=\"na\">name=</span><span class=\"s\">&quot;W&quot;</span><span class=\"nt\">&gt;</span>\n  <span class=\"nt\">&lt;frame</span> <span class=\"na\">name=</span><span class=\"s\">&quot;F&quot;</span><span class=\"nt\">/&gt;</span>\n  <span class=\"nt\">&lt;model</span> <span class=\"na\">name=</span><span class=\"s\">&quot;M&quot;</span><span class=\"nt\">&gt;</span>\n    <span class=\"nt\">&lt;frame</span> <span class=\"na\">name=</span><span class=\"s\">&quot;F&quot;</span><span class=\"nt\">/&gt;</span>\n    <span class=\"nt\">&lt;link</span> <span class=\"na\">name=</span><span class=\"s\">&quot;L&quot;</span><span class=\"nt\">&gt;</span>\n      <span class=\"nt\">&lt;collision</span> <span class=\"na\">name=</span><span class=\"s\">&quot;C&quot;</span><span class=\"nt\">&gt;</span>\n        <span class=\"nt\">&lt;pose</span> <span class=\"na\">relative_to=</span><span class=\"s\">&quot;F&quot;</span><span class=\"nt\">/&gt;</span>\n      <span class=\"nt\">&lt;/collision&gt;</span>\n    <span class=\"nt\">&lt;/link&gt;</span>\n  <span class=\"nt\">&lt;/model&gt;</span>\n<span class=\"nt\">&lt;/world&gt;</span>\n</pre></div>\n\n\n<p>there are frames named <code>F</code> at the model scope and world scope. do we really want to let objects inside a model reach outside the model scope even if they are in the same file?</p>", "type": "rendered"}, "created_on": "2019-08-28T00:52:32.037080+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "inline": {"to": 192, "from": null, "outdated": true, "path": "pose_frame_semantics/proposal.md"}, "updated_on": "2019-08-28T00:52:32.048321+00:00", "type": "pullrequest_comment", "id": 114683550}