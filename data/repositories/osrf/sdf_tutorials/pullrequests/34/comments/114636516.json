{"links": {"self": {"href": "data/repositories/osrf/sdf_tutorials/pullrequests/34/comments/114636516.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdf_tutorials/diff/osrf/sdf_tutorials:ba131eee209e..50070463105e?path=pose_frame_semantics%2Fproposal.md"}, "html": {"href": "#!/osrf/sdf_tutorials/pull-requests/34/_/diff#comment-114636516"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 34, "links": {"self": {"href": "data/repositories/osrf/sdf_tutorials/pullrequests/34.json"}, "html": {"href": "#!/osrf/sdf_tutorials/pull-requests/34"}}, "title": "Proposal: scoping rules, allow everything to use //pose[@relative_to]"}, "content": {"raw": "Technically, links also have scopes since, for example, collision names in one link can match collision names in another link. However, we're saying `//collision/pose` can access frame names defined in the model scope, which is outside of it's most immediate scope. While I don't object to this, it does seem like a syntactic inconsistency not addressed by the scoping rules. One idea (and I think @{557057:f3a199b9-5784-4964-9644-6ef224bc7dc1} has mentioned it before) would be to differentiate world and model scopes as *file scopes* and state that all objects can refer to names in their immediate scopes as well as in parent scopes recursively as long as they are within the file scope. ", "markup": "markdown", "html": "<p>Technically, links also have scopes since, for example, collision names in one link can match collision names in another link. However, we're saying <code>//collision/pose</code> can access frame names defined in the model scope, which is outside of it's most immediate scope. While I don't object to this, it does seem like a syntactic inconsistency not addressed by the scoping rules. One idea (and I think <span class=\"ap-mention\" data-atlassian-id=\"557057:f3a199b9-5784-4964-9644-6ef224bc7dc1\">@Eric Cousineau</span> has mentioned it before) would be to differentiate world and model scopes as <em>file scopes</em> and state that all objects can refer to names in their immediate scopes as well as in parent scopes recursively as long as they are within the file scope. </p>", "type": "rendered"}, "created_on": "2019-08-27T16:40:49.490760+00:00", "user": {"display_name": "Addisu Z. Taddese", "uuid": "{9d7fdc68-d270-4080-bf03-4df0d0dbf635}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D"}, "html": {"href": "https://bitbucket.org/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:90bc87b0-2886-4377-a17c-3a6629a697ff/afbf9be5-1e4c-4810-89d4-e58831f34b11/128"}}, "nickname": "azeey", "type": "user", "account_id": "557058:90bc87b0-2886-4377-a17c-3a6629a697ff"}, "inline": {"to": 192, "from": null, "outdated": true, "path": "pose_frame_semantics/proposal.md"}, "updated_on": "2019-08-27T16:41:48.668296+00:00", "type": "pullrequest_comment", "id": 114636516}