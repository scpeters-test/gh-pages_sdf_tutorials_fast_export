{"links": {"self": {"href": "data/repositories/osrf/sdf_tutorials/pullrequests/12/comments/138027742.json"}, "html": {"href": "#!/osrf/sdf_tutorials/pull-requests/12/_/diff#comment-138027742"}}, "parent": {"id": 138024269, "links": {"self": {"href": "data/repositories/osrf/sdf_tutorials/pullrequests/12/comments/138024269.json"}, "html": {"href": "#!/osrf/sdf_tutorials/pull-requests/12/_/diff#comment-138024269"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 12, "links": {"self": {"href": "data/repositories/osrf/sdf_tutorials/pullrequests/12.json"}, "html": {"href": "#!/osrf/sdf_tutorials/pull-requests/12"}}, "title": "Composition: Proposal"}, "content": {"raw": "How\u2019s about a 4th option: a different workflow?  \nIf a user knows they will be composing a house into a neighborhood, they should always do a majority of their composition in models only \\(which generally serve that purpose\\), and then for simulating whatever level of entities, they just have a rather simple `<world/>` file, and can delegate whatever text processing they want there?\n\nIf a house\u2019s illumination properties can only be described in a `<world/>` context, then I\u2019d say the spec is unable to express local properties, and that would need to be fixed, rather than trying to achieve it through odd heuristics of picking and choosing world properties?\n\nThe main concern I have with any support of `world` composition \\(of other `world`s\\) is that it seems entirely achievable with composite models \\(I think\\), with less options for conflicting redundancy.", "markup": "markdown", "html": "<p>How\u2019s about a 4th option: a different workflow?<br />\nIf a user knows they will be composing a house into a neighborhood, they should always do a majority of their composition in models only (which generally serve that purpose), and then for simulating whatever level of entities, they just have a rather simple <code>&lt;world/&gt;</code> file, and can delegate whatever text processing they want there?</p>\n<p>If a house\u2019s illumination properties can only be described in a <code>&lt;world/&gt;</code> context, then I\u2019d say the spec is unable to express local properties, and that would need to be fixed, rather than trying to achieve it through odd heuristics of picking and choosing world properties?</p>\n<p>The main concern I have with any support of <code>world</code> composition (of other <code>world</code>s) is that it seems entirely achievable with composite models (I think), with less options for conflicting redundancy.</p>", "type": "rendered"}, "created_on": "2020-02-28T16:44:38.341502+00:00", "user": {"display_name": "Eric Cousineau", "uuid": "{71c9fc05-02c8-45e1-adfa-13c8ac3399dc}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B71c9fc05-02c8-45e1-adfa-13c8ac3399dc%7D"}, "html": {"href": "https://bitbucket.org/%7B71c9fc05-02c8-45e1-adfa-13c8ac3399dc%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557057:f3a199b9-5784-4964-9644-6ef224bc7dc1/28a4d748-0fd4-4038-bf3d-55a77eb73ede/128"}}, "nickname": "eacousineau", "type": "user", "account_id": "557057:f3a199b9-5784-4964-9644-6ef224bc7dc1"}, "updated_on": "2020-02-28T16:44:38.350730+00:00", "type": "pullrequest_comment", "id": 138027742}