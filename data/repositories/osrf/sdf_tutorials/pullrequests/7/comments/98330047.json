{"links": {"self": {"href": "data/repositories/osrf/sdf_tutorials/pullrequests/7/comments/98330047.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdf_tutorials/diff/osrf/sdf_tutorials:f50ecf320279..e6660367eaad?path=pose_frame_semantics%2Fproposal.md"}, "html": {"href": "#!/osrf/sdf_tutorials/pull-requests/7/_/diff#comment-98330047"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 7, "links": {"self": {"href": "data/repositories/osrf/sdf_tutorials/pullrequests/7.json"}, "html": {"href": "#!/osrf/sdf_tutorials/pull-requests/7"}}, "title": "Pose frame semantics: proposal for new behavior"}, "content": {"raw": "Not a strong opinion, but we could also do this the other way around, where slashes are escaped when the name is created instead of when the name is used to refer to something. So `/` is reserved in all `name` attributes and during URDF->SDF conversion `/`s become `\\/`. And this example would then look like:\n```\n<model name=\"embedded_link_frame_escaping\">\n  <link name=\"name\\/with\\\\slashes\">\n    <frame name=\"frame1\">\n      <pose>0.5 0.2 0 0 0 0</pose>\n    </frame>\n  </link>\n\n  <link name=\"unescaped_link_frame\">\n    <pose frame=\"name/with\\slashes/frame1\"/> <!-- INVALID: implies search for name -> with\\slashes -> frame1 -->\n  </link>\n\n  <link name=\"escaped_link_frame\">\n    <pose frame=\"name\\/with\\\\slashes/frame1\"/> <!-- VALID. -->\n  </link>\n</model>\n```\n\nThe advantage is the link name `name\\/with\\\\slashes` is used as is in pose frame attribute. This would also be the case when creating a joint.\n\n```\n<joint name=\"j1\">\n  <parent>some_link</parent>\n  <child>name\\/with\\\\slashes</child>\n</joint>\n```\nIn both cases,  it might be less confusing to use the link name directly without having to escape it since it's already escaped.", "markup": "markdown", "html": "<p>Not a strong opinion, but we could also do this the other way around, where slashes are escaped when the name is created instead of when the name is used to refer to something. So <code>/</code> is reserved in all <code>name</code> attributes and during URDF-&gt;SDF conversion <code>/</code>s become <code>\\/</code>. And this example would then look like:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nt\">&lt;model</span> <span class=\"na\">name=</span><span class=\"s\">&quot;embedded_link_frame_escaping&quot;</span><span class=\"nt\">&gt;</span>\n  <span class=\"nt\">&lt;link</span> <span class=\"na\">name=</span><span class=\"s\">&quot;name\\/with\\\\slashes&quot;</span><span class=\"nt\">&gt;</span>\n    <span class=\"nt\">&lt;frame</span> <span class=\"na\">name=</span><span class=\"s\">&quot;frame1&quot;</span><span class=\"nt\">&gt;</span>\n      <span class=\"nt\">&lt;pose&gt;</span>0.5 0.2 0 0 0 0<span class=\"nt\">&lt;/pose&gt;</span>\n    <span class=\"nt\">&lt;/frame&gt;</span>\n  <span class=\"nt\">&lt;/link&gt;</span>\n\n  <span class=\"nt\">&lt;link</span> <span class=\"na\">name=</span><span class=\"s\">&quot;unescaped_link_frame&quot;</span><span class=\"nt\">&gt;</span>\n    <span class=\"nt\">&lt;pose</span> <span class=\"na\">frame=</span><span class=\"s\">&quot;name/with\\slashes/frame1&quot;</span><span class=\"nt\">/&gt;</span> <span class=\"c\">&lt;!-- INVALID: implies search for name -&gt; with\\slashes -&gt; frame1 --&gt;</span>\n  <span class=\"nt\">&lt;/link&gt;</span>\n\n  <span class=\"nt\">&lt;link</span> <span class=\"na\">name=</span><span class=\"s\">&quot;escaped_link_frame&quot;</span><span class=\"nt\">&gt;</span>\n    <span class=\"nt\">&lt;pose</span> <span class=\"na\">frame=</span><span class=\"s\">&quot;name\\/with\\\\slashes/frame1&quot;</span><span class=\"nt\">/&gt;</span> <span class=\"c\">&lt;!-- VALID. --&gt;</span>\n  <span class=\"nt\">&lt;/link&gt;</span>\n<span class=\"nt\">&lt;/model&gt;</span>\n</pre></div>\n\n\n<p>The advantage is the link name <code>name\\/with\\\\slashes</code> is used as is in pose frame attribute. This would also be the case when creating a joint.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nt\">&lt;joint</span> <span class=\"na\">name=</span><span class=\"s\">&quot;j1&quot;</span><span class=\"nt\">&gt;</span>\n  <span class=\"nt\">&lt;parent&gt;</span>some_link<span class=\"nt\">&lt;/parent&gt;</span>\n  <span class=\"nt\">&lt;child&gt;</span>name\\/with\\\\slashes<span class=\"nt\">&lt;/child&gt;</span>\n<span class=\"nt\">&lt;/joint&gt;</span>\n</pre></div>\n\n\n<p>In both cases,  it might be less confusing to use the link name directly without having to escape it since it's already escaped.</p>", "type": "rendered"}, "created_on": "2019-04-10T16:05:58.335363+00:00", "user": {"display_name": "Addisu Z. Taddese", "uuid": "{9d7fdc68-d270-4080-bf03-4df0d0dbf635}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D"}, "html": {"href": "https://bitbucket.org/%7B9d7fdc68-d270-4080-bf03-4df0d0dbf635%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:90bc87b0-2886-4377-a17c-3a6629a697ff/afbf9be5-1e4c-4810-89d4-e58831f34b11/128"}}, "nickname": "azeey", "type": "user", "account_id": "557058:90bc87b0-2886-4377-a17c-3a6629a697ff"}, "inline": {"to": 466, "from": null, "outdated": true, "path": "pose_frame_semantics/proposal.md"}, "updated_on": "2019-04-10T16:05:58.343297+00:00", "type": "pullrequest_comment", "id": 98330047}