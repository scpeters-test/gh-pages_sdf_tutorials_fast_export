{"links": {"self": {"href": "data/repositories/osrf/sdf_tutorials/pullrequests/13/comments/99867489.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdf_tutorials/diff/osrf/sdf_tutorials:3e3ddc2cd1c3..eda3d865c05f?path=spec_model_kinematics%2Ftutorial.md"}, "html": {"href": "#!/osrf/sdf_tutorials/pull-requests/13/_/diff#comment-99867489"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 13, "links": {"self": {"href": "data/repositories/osrf/sdf_tutorials/pullrequests/13.json"}, "html": {"href": "#!/osrf/sdf_tutorials/pull-requests/13"}}, "title": "Replace joint frame references with Jc and Jp"}, "content": {"raw": "I got lost with \u201cand the child link frame is co-located with frame \\`Jc\\`\u201d.  \nBut in any case, I think that physically \\(say you wanna give a ME instructions on how to build the thing\\) it is nice to think in terms of specifying the pose of Jp \\(attached to P\\) in frame P and, in terms of specifying the pose of Jc \\(attached to C\\) in frame C. That is, if I want to build the thing, I\u2019d tell the ME the values of X\\_PJp, X\\_CJc and the relation X\\_JpJc\\(q\\) that the joint imposes.   \n  \nOk, all that being said \\(sorry for the long intro\\) and the fact that Jc and Jp are coincident in the zero configuration, couldn\u2019t we say \u201c<origin> specifies the pose X\\_PJp of the joint frame Jp in the frame P of the parent link\u201d. \n\n  \nIt just seems strange to specify Jc \\(which moves with respect to Jp\\) in the frame of the parent link. Unless there is another assumption or limitation in the SDF I don\u2019t know about?", "markup": "markdown", "html": "<p>I got lost with \u201cand the child link frame is co-located with frame `Jc`\u201d.<br />\nBut in any case, I think that physically (say you wanna give a ME instructions on how to build the thing) it is nice to think in terms of specifying the pose of Jp (attached to P) in frame P and, in terms of specifying the pose of Jc (attached to C) in frame C. That is, if I want to build the thing, I\u2019d tell the ME the values of X_PJp, X_CJc and the relation X_JpJc(q) that the joint imposes.   </p>\n<p>Ok, all that being said (sorry for the long intro) and the fact that Jc and Jp are coincident in the zero configuration, couldn\u2019t we say \u201c&lt;origin&gt; specifies the pose X_PJp of the joint frame Jp in the frame P of the parent link\u201d. </p>\n<p>It just seems strange to specify Jc (which moves with respect to Jp) in the frame of the parent link. Unless there is another assumption or limitation in the SDF I don\u2019t know about?</p>", "type": "rendered"}, "created_on": "2019-04-24T16:04:28.462926+00:00", "user": {"display_name": "Alejandro Castro", "uuid": "{f78f4af9-eed7-49c4-b222-5b3dc10d5093}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bf78f4af9-eed7-49c4-b222-5b3dc10d5093%7D"}, "html": {"href": "https://bitbucket.org/%7Bf78f4af9-eed7-49c4-b222-5b3dc10d5093%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/9958cefe61157cc05fbc6d1a77d68a2fd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsAC-3.png"}}, "nickname": "amcastro0622", "type": "user", "account_id": "557058:82e5965f-3de7-463a-8d2f-5eb310e3ca12"}, "inline": {"to": 195, "from": null, "outdated": true, "path": "spec_model_kinematics/tutorial.md"}, "updated_on": "2019-04-24T16:04:28.623827+00:00", "type": "pullrequest_comment", "id": 99867489}