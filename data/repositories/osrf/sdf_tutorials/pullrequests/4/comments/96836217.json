{"links": {"self": {"href": "data/repositories/osrf/sdf_tutorials/pullrequests/4/comments/96836217.json"}, "html": {"href": "#!/osrf/sdf_tutorials/pull-requests/4/_/diff#comment-96836217"}}, "parent": {"id": 96836068, "links": {"self": {"href": "data/repositories/osrf/sdf_tutorials/pullrequests/4/comments/96836068.json"}, "html": {"href": "#!/osrf/sdf_tutorials/pull-requests/4/_/diff#comment-96836068"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 4, "links": {"self": {"href": "data/repositories/osrf/sdf_tutorials/pullrequests/4.json"}, "html": {"href": "#!/osrf/sdf_tutorials/pull-requests/4"}}, "title": "SDF Spec tutorial: Model Kinematics"}, "content": {"raw": "Drake\u2019s SDF parsing notation:\n\n[https://github.com/RobotLocomotion/drake/blob/63e8bf5d046841d5f8aad0f6b079f2c43f1fe712/multibody/parsing/detail\\_sdf\\_parser.cc#L335-L348](https://github.com/RobotLocomotion/drake/blob/63e8bf5d046841d5f8aad0f6b079f2c43f1fe712/multibody/parsing/detail_sdf_parser.cc#L335-L348)\n\nGoing to try to parse and map this to our discussion.  \n\nEDIT: This is my takeaway from our current code \\(mapping from code \\+ SDF frames to Mobilizer docs frames\\):\n\n```\nX_PJ  --> X_PF\nX_CJ  --> X_CM\n```\n\nSo the `J` frame in question really seems to be `F` \\(fixed\\), and the child specification really supplies `M` \\(mobilized\\).\n\nSo potential candidates for assignments of \\(Fixed, Mobilized\\) frames:\n\n\\(1\\) Implies joint frame is attached to child; fixed-to-parent is special:\n\n* \\(a\\) `(J0, J)`\n* \\(b\\) `(K, J)`\n* \\(c\\) `(Jf, J)`\n\n\\(2\\) Implies joint frame is attached to parent; mobilized-with-child is special:\n\n* \\(a\\) `(J, Jm)`\n* \\(b\\) `(J, K)`\n\nMy vote is for \\(2\\) overall, and \\(2.a\\) specifically.\n\n@azeey and @scpeters - can I ask what y\u2019all\u2019s votes are, or if you have other suggestions?", "markup": "markdown", "html": "<p>Drake\u2019s SDF parsing notation:</p>\n<p><a data-is-external-link=\"true\" href=\"https://github.com/RobotLocomotion/drake/blob/63e8bf5d046841d5f8aad0f6b079f2c43f1fe712/multibody/parsing/detail_sdf_parser.cc#L335-L348\" rel=\"nofollow\">https://github.com/RobotLocomotion/drake/blob/63e8bf5d046841d5f8aad0f6b079f2c43f1fe712/multibody/parsing/detail_sdf_parser.cc#L335-L348</a></p>\n<p>Going to try to parse and map this to our discussion.  </p>\n<p>EDIT: This is my takeaway from our current code (mapping from code + SDF frames to Mobilizer docs frames):</p>\n<div class=\"codehilite\"><pre><span></span>X_PJ  --&gt; X_PF\nX_CJ  --&gt; X_CM\n</pre></div>\n\n\n<p>So the <code>J</code> frame in question really seems to be <code>F</code> (fixed), and the child specification really supplies <code>M</code> (mobilized).</p>\n<p>So potential candidates for assignments of (Fixed, Mobilized) frames:</p>\n<p>(1) Implies joint frame is attached to child; fixed-to-parent is special:</p>\n<ul>\n<li>(a) <code>(J0, J)</code></li>\n<li>(b) <code>(K, J)</code></li>\n<li>(c) <code>(Jf, J)</code></li>\n</ul>\n<p>(2) Implies joint frame is attached to parent; mobilized-with-child is special:</p>\n<ul>\n<li>(a) <code>(J, Jm)</code></li>\n<li>(b) <code>(J, K)</code></li>\n</ul>\n<p>My vote is for (2) overall, and (2.a) specifically.</p>\n<p>@azeey and @scpeters - can I ask what y\u2019all\u2019s votes are, or if you have other suggestions?</p>", "type": "rendered"}, "created_on": "2019-03-28T21:58:55.404454+00:00", "user": {"display_name": "Eric Cousineau", "uuid": "{71c9fc05-02c8-45e1-adfa-13c8ac3399dc}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B71c9fc05-02c8-45e1-adfa-13c8ac3399dc%7D"}, "html": {"href": "https://bitbucket.org/%7B71c9fc05-02c8-45e1-adfa-13c8ac3399dc%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557057:f3a199b9-5784-4964-9644-6ef224bc7dc1/28a4d748-0fd4-4038-bf3d-55a77eb73ede/128"}}, "nickname": "eacousineau", "type": "user", "account_id": "557057:f3a199b9-5784-4964-9644-6ef224bc7dc1"}, "updated_on": "2019-03-28T22:07:21.345804+00:00", "type": "pullrequest_comment", "id": 96836217}